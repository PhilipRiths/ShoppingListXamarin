// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ShoppingListApi.Data;
using System;

namespace ShoppingListApi.Migrations
{
    [DbContext(typeof(ShoppingListContext))]
    [Migration("20180109073728_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShoppingListApi.Entities.FavoriteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteItems");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(400);

                    b.Property<bool>("IsBought");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedById");

                    b.Property<DateTime>("LastEdited");

                    b.Property<int?>("LastEditedById");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LastEditedById");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShoppingItemId");

                    b.Property<int>("ShoppingListId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingItemId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItem");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingListUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ShoppingListId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingListId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingListUser");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("GoogleId")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasAlternateKey("GoogleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.FavoriteItem", b =>
                {
                    b.HasOne("ShoppingListApi.Entities.User", "User")
                        .WithMany("FavoriteItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingList", b =>
                {
                    b.HasOne("ShoppingListApi.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("ShoppingListApi.Entities.User", "LastEditedBy")
                        .WithMany()
                        .HasForeignKey("LastEditedById");
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingListItem", b =>
                {
                    b.HasOne("ShoppingListApi.Entities.ShoppingItem", "ShoppingItem")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("ShoppingItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShoppingListApi.Entities.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingItems")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShoppingListApi.Entities.ShoppingListUser", b =>
                {
                    b.HasOne("ShoppingListApi.Entities.ShoppingList", "ShoppingList")
                        .WithMany("Users")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShoppingListApi.Entities.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
